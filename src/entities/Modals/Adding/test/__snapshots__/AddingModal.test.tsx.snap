// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`testing AddingModalEntity render and typing 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="wrapper none"
      >
        <modal
          data-testid="modal"
        >
          <div
            class="popup"
          >
            <modalheader
              paragraph=""
              title="modal.adding.title"
            />
            <article
              class="stepOne"
            >
              <textfield
                data-testid="field"
                label="labels.address"
                name="addres"
              />
              <div
                class="column"
              >
                <p
                  class="currency"
                >
                  <span>
                    labels.currensy
                  </span>
                   2
                </p>
                <p
                  class="amount"
                >
                  <span>
                    labels.amount
                  </span>
                   
                  NaN
                </p>
              </div>
              <modalactions
                btntextaction="btn.iSent"
                btntextcancel="btn.cansel"
              />
            </article>
          </div>
        </modal>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="wrapper none"
    >
      <modal
        data-testid="modal"
      >
        <div
          class="popup"
        >
          <modalheader
            paragraph=""
            title="modal.adding.title"
          />
          <article
            class="stepOne"
          >
            <textfield
              data-testid="field"
              label="labels.address"
              name="addres"
            />
            <div
              class="column"
            >
              <p
                class="currency"
              >
                <span>
                  labels.currensy
                </span>
                 2
              </p>
              <p
                class="amount"
              >
                <span>
                  labels.amount
                </span>
                 
                NaN
              </p>
            </div>
            <modalactions
              btntextaction="btn.iSent"
              btntextcancel="btn.cansel"
            />
          </article>
        </div>
      </modal>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
